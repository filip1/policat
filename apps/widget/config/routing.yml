feed:
  url: /feed
  param: { module: home, action: feed }

sign:
  url: /sign/:id/:hash
  param: { module: widget, action: sign }

sign_hp:
  url: /sign_hp/:id/:hash
  param: { module: widget, action: signHp }

validate:
  url: /validate/:code
  param: { module: widget, action: validate }

delete_signing:
  url: /delete/:code
  param: { module: widget, action: delete }

unsubscribe_signing:
  url: /unsubscribe/:code
  param: { module: widget, action: unsubscribe }

ref_shown:
  url: /ref_shown
  param: { module: widget, action: refShown }

pledge_contact:
  url: '/pledge/:petition_id/:contact_id/:secret'
  param: { module: pledge_contact, action: index }
  requirements:
    sf_method: [get, head, post]
    petition_id: '\d+'
    contact_id: '\d+'
    secret: '.{15}'

pledge_contact_test:
  url: '/pledge/:petition_id/test'
  param: { module: pledge_contact, action: index }
  requirements:
    sf_method: [get, head]
    petition_id: '\d+'

api_js_widget:
  url: /api/js/widget/:id
  param: { module: widget, action: widgetOuter }

api_js_widget_no_redirect:
  url: /api/js/widget_no_redirect/:id
  param: { module: widget, action: widgetOuter, noRedirect: true }

widget_page:
  url: /p/:id
  param: { module: widget, action: page }

# keep for old urls compatibility
teaser_js:
  url: /teaser_js/:id
  param: { module: widget, action: widgetOuter }

teaser_js2:
  url: /teaser_js2/:id
  param: { module: widget, action: widgetOuter }

api_v2:
  url: /api/v2/actions/:action_id/signings
  param: { module: api_v2, action: actionSignings }
  requirements:
    action_id: '\d+'

api_v2_last_signings_large:
  url: /api/v2/actions/:action_id/last-signings/:page/large
  param: { module: api_v2, action: actionLastSignings, type: large }
  class: sfRequestRoute
  requirements:
    sf_method: [get, head]
    action_id: '[1-9]\d*'
    page: '[1-9]\d*'

api_v2_last_signings:
  url: /api/v2/actions/:action_id/last-signings/:page
  param: { module: api_v2, action: actionLastSignings, type: normal }
  class: sfRequestRoute
  requirements:
    sf_method: [get, head]
    action_id: '[1-9]\d*'
    page: '[1-9]\d*'

api_v2_list_signings:
  url: /api/v2/actions/:action_id/list-signings/:order/:page
  param: { module: api_v2, action: actionLastSignings, type: list }
  class: sfRequestRoute
  requirements:
    sf_method: [get, head]
    action_id: '[1-9]\d*'
    page: '[1-9]\d*'
    order: '((date)|(name)|(city)|(country))_((asc)|(desc))'

api_v2_signing_hashes:
  url: /api/v2/actions/:action_id/hashes/:page
  param: { module: api_v2, action: actionHashes }
  class: sfRequestRoute
  requirements:
    sf_method: [get, head, post]
    action_id: '[1-9]\d*'
    page: '[1-9]\d*'

api_v2_doc:
  url: /api/v2
  param: { module: api_v2, action: doc }

api:
  url: /api/:format
  param: { module: api, action: index }

api_doc:
  url: /api
  param: { module: api, action: doc }

widgetedit:
  url: /widgetedit/:code
  param: { module: widget, action: widgetedit }

fb_canvas:
  url: /fb_canvas/*
  param: { module: facebook, action: canvas }

fb_tab:
  url: /fb_tab/*
  param: { module: facebook, action: tab }

text:
  url: /text/:hash
  param: { module: widget, action: text }

counterbar_generator:
  url: /counterbar
  param: { module: api, action: counterbar_generator }

counterbar_colors:
  url: /counterbar/colors
  param: { module: api, action: colors }

counterbar:
  url: /counterbar/:id
  param: { module: api, action: counterbar }

api_incomming_bounce:
  url: /api/v2/incomming/bounce
  param: { module: api_v2_incomming, action: bounce }

api_incomming_blocked:
  url: /api/v2/incomming/blocked
  param: { module: api_v2_incomming, action: blocked }

api_incomming_mixed:
  url: /api/v2/incomming/mixed
  param: { module: api_v2_incomming, action: mixed }

terms:            { url: '/terms',                  param: { module: default, action: error404 } }
contact:          { url: '/contact',                param: { module: default, action: error404 } }
privacy:          { url: '/privacy',                param: { module: default, action: error404 } }
widgetval:        { url: '/widgetval/:code',        param: { module: default, action: error404 } }
homepage:         { url: '/',                       param: { module: default, action: error404 } }
imprint:          { url: '/imprint',                param: { module: default, action: error404 } }
widget_edit:      { url: '/widget/edit/:id',        param: { module: default, action: error404 } }
dashboard:        { url: '/dashboard',              param: { module: default, action: error404 } }

signers:
  url: /signers/:id/:text_id
  param: { module: signers, action: index }
  class: sfRequestRoute
  requirements:
    sf_method: [get, head]
    id: '\d+'
    text_id: '\d+'

default:
  url: /*
  param: { module: default, action: error404 }
